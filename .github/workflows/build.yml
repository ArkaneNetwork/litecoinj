name: üèóÔ∏è Build
on:
  push:
    paths-ignore:
      - .github/**
  pull_request:
  workflow_dispatch:
env:
  AWS_REGION: "eu-west-1"
permissions:
  actions: read
  checks: write
  contents: write
  deployments: read
  id-token: write
  issues: read
  discussions: read
  packages: read
  pages: read
  pull-requests: read
  repository-projects: read
  security-events: read
  statuses: read
run-name: üèóÔ∏è Build ${{ github.ref_name	}}
jobs:
  # =====================================================
  # Job: Build
  # =====================================================
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    strategy:
      matrix:
        gradle-version: [8.4]
        include:
          - java-version: 17
            gradle-version: 8.4
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: "temurin" # AdoptOpenJDK

      - name: Build with Gradle
        id: setup-gradle
        env:
          GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true
          NEXUS_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: ${{ matrix.gradle-version }}

      - name: Dry Run with Gradle version ${{ matrix.gradle-version }}
        shell: bash
        env:
          NEXUS_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        run: gradle build --dry-run

      - name: Run with Gradle version ${{ matrix.gradle-version }}
        shell: bash
        env:
          NEXUS_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        run: gradle clean assemble --stacktrace

      - name: Version used for build
        shell: bash
        run: echo "The version was ${{ steps.setup-gradle.outputs.gradle-version }}"

      - name: Publish to Nexus Repository
        shell: bash
        env:
          NEXUS_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        run: gradle publish
